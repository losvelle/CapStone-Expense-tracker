{"ast":null,"code":"var _jsxFileName = \"/Users/carlos/Documents/PerScholas/expense/app/src/Expsenses.js\";\nimport React, { Component } from 'react';\nimport AppNav from './AppNav';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\nimport { Table, Container, Input, Button, Label, FormGroup, Form } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nclass Expsenses extends Component {\n  // { Sample Data  of what is received from database\n  //   \"id\": 100,\n  //   \"expensedate\": \"2019-06-16T17:00:00Z\",\n  //   \"description\": \"New York Business Trip\",\n  //   \"location\": \"New York\",\n  //   \"category\": {\n  //   \"id\": 1,\n  //   \"name\": \"Travel\"\n  //   }\n  //   },\n  constructor(props) {\n    super(props);\n    this.emptyItem = {\n      description: '',\n      expensedate: new Date(),\n      id: 104,\n      location: '',\n      category: {\n        id: 1,\n        name: 'Travel'\n      }\n    };\n    this.state = {\n      isLoading: false,\n      Categories: [],\n      Expsenses: [],\n      date: new Date(),\n      item: this.emptyItem\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  async handleSubmit(event) {\n    const item = this.state.item;\n    await fetch(`/api/expenses`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item)\n    });\n    event.preventDefault();\n    this.props.history.push(\"/expenses\");\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = { ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n    console.log(item);\n  }\n\n  handleDateChange(date) {\n    let item = { ...this.state.item\n    };\n    item.expensedate = date;\n    this.setState({\n      item\n    });\n  }\n\n  async remove(id) {\n    await fetch(`/api/expenses/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedExpenses = [...this.state.Expsenses].filter(i => i.id !== id);\n      this.setState({\n        Expsenses: updatedExpenses\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/categories');\n    const body = await response.json();\n    this.setState({\n      Categories: body,\n      isLoading: false\n    });\n    const responseExp = await fetch('/api/expenses');\n    const bodyExp = await responseExp.json();\n    this.setState({\n      Expsenses: bodyExp,\n      isLoading: false\n    });\n    console.log(bodyExp);\n  }\n\n  render() {\n    const title = /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \" Add Expense \");\n    const {\n      Categories\n    } = this.state;\n    const {\n      Expsenses,\n      isLoading\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 16\n      }\n    }, \" Loading.... \");\n    let optionList = Categories.map(category => /*#__PURE__*/React.createElement(\"option\", {\n      value: category.id,\n      key: category.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, \" \", category.name, \" \"));\n    let rows = Expenses.map(expense => /*#__PURE__*/React.createElement(\"tr\", {\n      key: expense.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, \" \", expense.description, \" \"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 22\n      }\n    }, \" \", expense.location, \" \"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 22\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Moment, {\n      date: expense.expensedate,\n      format: \"YYYY/MM/DD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 18\n      }\n    }), \" \"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 46\n      }\n    }, \" \", expense.category.name, \" \"), \" \", /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 22\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      color: \"danger\",\n      onClick: () => this.remove(expense.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 18\n      }\n    }, \" Delete \"))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(AppNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, \" \", title, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, \" Title \"), \" \", /*#__PURE__*/React.createElement(Input, {\n      type: \"description\",\n      name: \"description\",\n      id: \"description\",\n      onChange: this.handleChange,\n      autoComplete: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, \" Category \"), \" \", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 51\n      }\n    }, \" \", optionList, \" \")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"city\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, \" Date \"), \" \", /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.item.expensedate,\n      onChange: this.handleDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 43\n      }\n    }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4 mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }\n    }, \" Location \"), \" \", /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 51\n      }\n    }), \" \")), \" \", /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 13\n      }\n    }, \" Save \"), ' ', \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      tag: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 52\n      }\n    }, \" Cancel \"), \" \"), \" \"), \" \"), '', \" \", /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, \" Expense List \"), \" \", /*#__PURE__*/React.createElement(Table, {\n      className: \"mt-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      width: \"30%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 13\n      }\n    }, \" Description \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 51\n      }\n    }, \" Location \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 48\n      }\n    }, \" Date \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 30\n      }\n    }, \" Category \"), \" \", /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 34\n      }\n    }, \" Action \"), \" \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, \" \", rows, \" \")), \" \"), \"}\");\n  }\n\n}\n\nexport default Expsenses;","map":{"version":3,"sources":["/Users/carlos/Documents/PerScholas/expense/app/src/Expsenses.js"],"names":["React","Component","AppNav","DatePicker","Table","Container","Input","Button","Label","FormGroup","Form","Link","Moment","Expsenses","constructor","props","emptyItem","description","expensedate","Date","id","location","category","name","state","isLoading","Categories","date","item","handleSubmit","bind","handleChange","handleDateChange","event","fetch","method","headers","body","JSON","stringify","preventDefault","history","push","target","value","setState","console","log","remove","then","updatedExpenses","filter","i","componentDidMount","response","json","responseExp","bodyExp","render","title","optionList","map","rows","Expenses","expense"],"mappings":";AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAO,WAAP;AACA,SACEC,KADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,IAPF,QAQO,YARP;AASA,SACEC,IADF,QAEO,kBAFP;AAGA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,SAAN,SAAwBZ,SAAxB,CAAkC;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcAa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAZnBC,SAYmB,GAZP;AACVC,MAAAA,WAAW,EAAE,EADH;AAEVC,MAAAA,WAAW,EAAE,IAAIC,IAAJ,EAFH;AAGVC,MAAAA,EAAE,EAAE,GAHM;AAIVC,MAAAA,QAAQ,EAAE,EAJA;AAKVC,MAAAA,QAAQ,EAAE;AACRF,QAAAA,EAAE,EAAE,CADI;AAERG,QAAAA,IAAI,EAAE;AAFE;AALA,KAYO;AAGjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,UAAU,EAAE,EAFD;AAGXb,MAAAA,SAAS,EAAE,EAHA;AAIXc,MAAAA,IAAI,EAAE,IAAIR,IAAJ,EAJK;AAKXS,MAAAA,IAAI,EAAE,KAAKZ;AALA,KAAb;AAQA,SAAKa,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AAED;;AAEiB,QAAZD,YAAY,CAACI,KAAD,EAAQ;AAExB,UAAML,IAAI,GAAG,KAAKJ,KAAL,CAAWI,IAAxB;AAGA,UAAMM,KAAK,CAAE,eAAF,EAAkB;AAC3BC,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFkB;AAM3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AANqB,KAAlB,CAAX;AASAK,IAAAA,KAAK,CAACO,cAAN;AACA,SAAKzB,KAAL,CAAW0B,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACD;;AAGDX,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAClB,UAAMU,MAAM,GAAGV,KAAK,CAACU,MAArB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,UAAMrB,IAAI,GAAGoB,MAAM,CAACpB,IAApB;AACA,QAAIK,IAAI,GAAG,EACT,GAAG,KAAKJ,KAAL,CAAWI;AADL,KAAX;AAGAA,IAAAA,IAAI,CAACL,IAAD,CAAJ,GAAaqB,KAAb;AACA,SAAKC,QAAL,CAAc;AACZjB,MAAAA;AADY,KAAd;AAGAkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAZ;AACD;;AAGDI,EAAAA,gBAAgB,CAACL,IAAD,EAAO;AACrB,QAAIC,IAAI,GAAG,EACT,GAAG,KAAKJ,KAAL,CAAWI;AADL,KAAX;AAGAA,IAAAA,IAAI,CAACV,WAAL,GAAmBS,IAAnB;AACA,SAAKkB,QAAL,CAAc;AACZjB,MAAAA;AADY,KAAd;AAID;;AAOW,QAANoB,MAAM,CAAC5B,EAAD,EAAK;AACf,UAAMc,KAAK,CAAE,iBAAgBd,EAAG,EAArB,EAAwB;AACjCe,MAAAA,MAAM,EAAE,QADyB;AAEjCC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAFwB,KAAxB,CAAL,CAOHa,IAPG,CAOE,MAAM;AACZ,UAAIC,eAAe,GAAG,CAAC,GAAG,KAAK1B,KAAL,CAAWX,SAAf,EAA0BsC,MAA1B,CAAiCC,CAAC,IAAIA,CAAC,CAAChC,EAAF,KAASA,EAA/C,CAAtB;AACA,WAAKyB,QAAL,CAAc;AACZhC,QAAAA,SAAS,EAAEqC;AADC,OAAd;AAGD,KAZK,CAAN;AAcD;;AAGsB,QAAjBG,iBAAiB,GAAG;AAIxB,UAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAAC,iBAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMiB,QAAQ,CAACC,IAAT,EAAnB;AACA,SAAKV,QAAL,CAAc;AACZnB,MAAAA,UAAU,EAAEW,IADA;AAEZZ,MAAAA,SAAS,EAAE;AAFC,KAAd;AAMA,UAAM+B,WAAW,GAAG,MAAMtB,KAAK,CAAC,eAAD,CAA/B;AACA,UAAMuB,OAAO,GAAG,MAAMD,WAAW,CAACD,IAAZ,EAAtB;AACE,SAAKV,QAAL,CAAc;AACdhC,MAAAA,SAAS,EAAE4C,OADG;AAEdhC,MAAAA,SAAS,EAAE;AAFG,KAAd;AAIFqB,IAAAA,OAAO,CAACC,GAAR,CAAYU,OAAZ;AAED;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAd;AACA,UAAM;AACJjC,MAAAA;AADI,QAEF,KAAKF,KAFT;AAGA,UAAM;AACJX,MAAAA,SADI;AAEJY,MAAAA;AAFI,QAGF,KAAKD,KAHT;AAMA,QAAIC,SAAJ,EACE,oBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAT;AAIE,QAAImC,UAAU,GACZlC,UAAU,CAACmC,GAAX,CAAgBvC,QAAD,iBACb;AACO,MAAA,KAAK,EACVA,QAAQ,CAACF,EAFX;AAIA,MAAA,GAAG,EACDE,QAAQ,CAACF,EALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOEE,QAAQ,CAACC,IAPX,MADF,CADF;AAaE,QAAIuC,IAAI,GACRC,QAAQ,CAACF,GAAT,CAAaG,OAAO,iBAClB;AACG,MAAA,GAAG,EACJA,OAAO,CAAC5C,EAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEE4C,OAAO,CAAC/C,WAFV,MAJA,oBAOS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEP+C,OAAO,CAAC3C,QAFD,MAPT,oBAUS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACJ,oBAAE,MAAF;AAAS,MAAA,IAAI,EAChB2C,OAAO,CAAC9C,WADL;AAGL,MAAA,MAAM,EAAG,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,MAVT,oBAciC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAE/B8C,OAAO,CAAC1C,QAAR,CAAiBC,IAFc,MAdjC,oBAiBS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACJ,oBAAE,MAAF;AAAS,MAAA,IAAI,EAAG,IAAhB;AACL,MAAA,KAAK,EAAG,QADH;AAEL,MAAA,OAAO,EACL,MAAM,KAAKyB,MAAL,CAAYgB,OAAO,CAAC5C,EAApB,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,CAjBT,CADF,CADA;AAgCF,wBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEL,oBACA,MADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,eAIL,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEEuC,KAFF,eAKA,oBACA,IADA;AACK,MAAA,QAAQ,EACX,KAAK9B,YAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIA,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,KADA;AAEA,MAAA,GAAG,EAAG,aAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,oBAIsC,oBACtC,KADsC;AAChC,MAAA,IAAI,EAAG,aADyB;AAEtC,MAAA,IAAI,EAAG,aAF+B;AAGtC,MAAA,EAAE,EAAG,aAHiC;AAItC,MAAA,QAAQ,EACN,KAAKE,YAL+B;AAOtC,MAAA,YAAY,EAAG,MAPuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtC,CAJA,eAoBA,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,KADA;AAEA,MAAA,GAAG,EAAG,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,oBAIsC;AAC/B,MAAA,QAAQ,EACb,KAAKA,YAF+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAIpC6B,UAJoC,MAJtC,CApBA,eAmCA,oBACA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,KADA;AAEA,MAAA,GAAG,EAAG,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,oBAI8B,oBAC9B,UAD8B;AACnB,MAAA,QAAQ,EACjB,KAAKpC,KAAL,CAAWI,IAAX,CAAgBV,WAFY;AAI9B,MAAA,QAAQ,EACN,KAAKc,gBALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ9B,MAnCA,eAiDA;AACI,MAAA,SAAS,EAAG,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,SADA;AACU,MAAA,SAAS,EAAG,eADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBACA,KADA;AAEA,MAAA,GAAG,EAAG,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,oBAIsC,oBACtC,KADsC;AAChC,MAAA,IAAI,EAAG,MADyB;AAEtC,MAAA,IAAI,EAAG,UAF+B;AAGtC,MAAA,EAAE,EAAG,UAHiC;AAItC,MAAA,QAAQ,EACN,KAAKD,YAL+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJtC,MAFA,CAjDA,oBAkEM,oBACN,SADM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEN,oBACA,MADA;AACO,MAAA,KAAK,EAAG,SADf;AAEA,MAAA,IAAI,EAAG,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFM,EAI4B,GAJ5B,oBAIiC,oBACvC,MADuC;AAChC,MAAA,KAAK,EAAG,WADwB;AAEvC,MAAA,GAAG,EACDpB,IAHqC;AAKvC,MAAA,EAAE,EAAG,GALkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJjC,MAlEN,MALA,MAJK,EA2FH,EA3FG,oBA4FH,oBACF,SADE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFE,oBAGuB,oBACzB,KADyB;AACnB,MAAA,SAAS,EAAG,MADO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AACG,MAAA,KAAK,EAAG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,oBAGsC;AACnC,MAAA,KAAK,EAAG,KAD2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHtC,oBAImC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJnC,oBAKiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALjB,oBAMqB;AAClB,MAAA,KAAK,EAAG,KADU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANrB,MAFA,MAFyB,oBAajB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAENmD,IAFM,MAbiB,CAHvB,MA5FG,MAAT;AA4HL;;AAjU+B;;AAoUlC,eAAejD,SAAf","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport AppNav from './AppNav';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './App.css';\nimport {\n  Table,\n  Container,\n  Input,\n  Button,\n  Label,\n  FormGroup,\n  Form\n} from 'reactstrap';\nimport {\n  Link\n} from 'react-router-dom';\nimport Moment from 'react-moment';\n\nclass Expsenses extends Component {\n\n  // { Sample Data  of what is received from database\n  //   \"id\": 100,\n  //   \"expensedate\": \"2019-06-16T17:00:00Z\",\n  //   \"description\": \"New York Business Trip\",\n  //   \"location\": \"New York\",\n  //   \"category\": {\n  //   \"id\": 1,\n  //   \"name\": \"Travel\"\n  //   }\n  //   },\n\n  emptyItem = {\n    description: '',\n    expensedate: new Date(),\n    id: 104,\n    location: '',\n    category: {\n      id: 1,\n      name: 'Travel'\n    }\n  }\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLoading: false,\n      Categories: [],\n      Expsenses: [],\n      date: new Date(),\n      item: this.emptyItem\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n\n  }\n\n  async handleSubmit(event) {\n\n    const item = this.state.item;\n\n\n    await fetch(`/api/expenses`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(item),\n    });\n\n    event.preventDefault();\n    this.props.history.push(\"/expenses\");\n  }\n\n\n  handleChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    let item = {\n      ...this.state.item\n    };\n    item[name] = value;\n    this.setState({\n      item\n    });\n    console.log(item);\n  }\n\n\n  handleDateChange(date) {\n    let item = {\n      ...this.state.item\n    };\n    item.expensedate = date;\n    this.setState({\n      item\n    });\n\n  }\n\n\n\n\n\n\n  async remove(id) {\n    await fetch(`/api/expenses/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n\n    }).then(() => {\n      let updatedExpenses = [...this.state.Expsenses].filter(i => i.id !== id);\n      this.setState({\n        Expsenses: updatedExpenses\n      });\n    });\n\n  }\n\n\n  async componentDidMount() {\n\n\n\n    const response = await fetch('/api/categories');\n    const body = await response.json();\n    this.setState({\n      Categories: body,\n      isLoading: false\n    });\n\n\n    const responseExp = await fetch('/api/expenses');\n    const bodyExp = await responseExp.json();\n      this.setState({\n      Expsenses: bodyExp,\n      isLoading: false\n    });\n    console.log(bodyExp);\n\n  }\n\n\n\n\n\n  render() {\n    const title = < h3 > Add Expense < /h3>;\n    const {\n      Categories\n    } = this.state;\n    const {\n      Expsenses,\n      isLoading\n    } = this.state;\n\n\n    if (isLoading)\n      return ( < div > Loading.... < /div>)\n\n\n\n        let optionList =\n          Categories.map((category) =>\n            <\n            option value = {\n              category.id\n            }\n            key = {\n              category.id\n            } > {\n              category.name\n            } </option>\n          )\n\n          let rows =\n          Expenses.map(expense =>\n            <\n            tr key = {\n              expense.id\n            } >\n            <\n            td > {\n              expense.description\n            } < /td> <\n            td > {\n              expense.location\n            } < /td> <\n            td > < Moment date = {\n              expense.expensedate\n            }\n            format = \"YYYY/MM/DD\" / > < /td> <\n            td > {\n              expense.category.name\n            } < /td> <\n            td > < Button size = \"sm\"\n            color = \"danger\"\n            onClick = {\n              () => this.remove(expense.id)\n            } > Delete < /Button></td >\n\n            </tr>\n\n\n          )\n\n\n        return ( <\n            div >\n            <\n            AppNav / >\n            <\n            Container > {\n              title\n            }\n\n            <\n            Form onSubmit = {\n              this.handleSubmit\n            } >\n            <\n            FormGroup >\n            <\n            Label\n            for = \"description\" > Title < /Label> <\n            Input type = \"description\"\n            name = \"description\"\n            id = \"description\"\n            onChange = {\n              this.handleChange\n            }\n            autoComplete = \"name\" / >\n\n            <\n            /FormGroup>\n\n            <\n            FormGroup >\n            <\n            Label\n            for = \"category\" > Category < /Label> <\n            select onChange = {\n              this.handleChange\n            } > {\n              optionList\n            } <\n            /select>\n\n            <\n            /FormGroup>\n\n            <\n            FormGroup >\n            <\n            Label\n            for = \"city\" > Date < /Label> <\n            DatePicker selected = {\n              this.state.item.expensedate\n            }\n            onChange = {\n              this.handleDateChange\n            }\n            /> <\n            /FormGroup>\n\n            <\n            div className = \"row\" >\n            <\n            FormGroup className = \"col-md-4 mb-3\" >\n            <\n            Label\n            for = \"location\" > Location < /Label> <\n            Input type = \"text\"\n            name = \"location\"\n            id = \"location\"\n            onChange = {\n              this.handleChange\n            }\n            /> <\n            /FormGroup>\n\n            <\n            /div> <\n            FormGroup >\n            <\n            Button color = \"primary\"\n            type = \"submit\" > Save < /Button>{' '} <\n            Button color = \"secondary\"\n            tag = {\n              Link\n            }\n            to = \"/\" > Cancel < /Button> <\n            /FormGroup> <\n            /Form> <\n            /Container>\n\n\n            {\n              ''\n            } <\n            Container >\n            <\n            h3 > Expense List < /h3> <\n            Table className = \"mt-4\" >\n            <\n            thead >\n            <\n            tr >\n            <\n            th width = \"30%\" > Description < /th> <\n            th width = \"10%\" > Location < /th> <\n            th > Date < /th> <\n            th > Category < /th> <\n            th width = \"10%\" > Action < /th> <\n            /tr> <\n            /thead> <\n            tbody > {\n              rows\n            } <\n            /tbody>\n\n            <\n            /Table> <\n            /Container>\n\n          }\n\n          <\n          /div>\n\n      );\n  }\n}\n\nexport default Expsenses;\n"]},"metadata":{},"sourceType":"module"}